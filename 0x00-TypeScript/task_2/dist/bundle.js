!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e),r.d(e,"printTeacher",(function(){return n})),r.d(e,"StudentClass",(function(){return o})),r.d(e,"Director",(function(){return u})),r.d(e,"Teacher",(function(){return i})),r.d(e,"createEmployee",(function(){return f}));var n=function(t,e){return t[0]+". "+e},o=function(){function t(t,e){this.firstName=t,this.lastName=e}return t.prototype.workOnHomework=function(){return"Currently working"},t.prototype.displayName=function(){return this.firstName},t}(),u=function(){function t(){}return t.prototype.workFromHome=function(){return"Working from home"},t.prototype.getCoffeeBreak=function(){return"Getting a coffee break"},t.prototype.workDirectorTasks=function(){return"Getting to director tasks"},t}(),i=function(){function t(){}return t.prototype.workFromHome=function(){return"Cannot work from home"},t.prototype.getCoffeeBreak=function(){return"Cannot have a break"},t.prototype.workTeacherTasks=function(){return"Getting to work"},t}();function f(t){return"number"==typeof t&&t<500?new i:new u}console.log(f(200)),console.log(f(1e3)),console.log(f("$500"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,